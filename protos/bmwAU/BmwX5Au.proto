#VRML_SIM R2019b utf8
# license: Copyright Cyberbotics Ltd. Licensed for use only with Webots.
# license url: https://cyberbotics.com/webots_assets_license
# tags: static
# documentation url: https://www.cyberbotics.com/doc/automobile/car
# Model of an BMW X5 AU car using the Car proto as a base.
# The vehicle is modelled with realistic physics properties: motor torques, body mass, friction forces, suspensions, etc.
# This model was sponsored by the CTI project RO2IVSim (http://transport.epfl.ch/simulator-for-mobile-robots-and-intelligent-vehicles).
# For the last 6 fields to have any effect, the 'interior' has to be enabled.

PROTO BmwX5Au [
  field SFVec3f      translation              0 0.4 0
  field SFRotation   rotation                 0 1 0 0
  field SFColor      color                    0.43 0.11 0.1
  field SFString     engineSound              "sounds/engine.wav"
  field SFString     name                     "vehicle"
  field SFString     controller               "void"
  field SFString     controllerArgs           ""
  field SFBool       supervisor               FALSE
  field SFBool       synchronization          TRUE
  field SFBool       windshieldWipers         TRUE
  field SFBool       frontSpotLights          TRUE
  field SFBool       rearMirror               TRUE
  field SFBool       leftWingMirror           TRUE
  field SFBool       rightWingMirror          TRUE
  field SFFloat      mirrorFar                100.0
  field MFNode       sensorsSlotFront         [ ]
  field MFNode       sensorsSlotRear          [ ]
  field MFNode       sensorsSlotTop           [ ]
  field MFNode       sensorsSlotCenter        [ ]
  field SFFloat      suspensionFrontSpringConstant  0
  field SFFloat      suspensionFrontDampingConstant 0
  field SFFloat      suspensionRearSpringConstant   0
  field SFFloat      suspensionRearDampingConstant  0
  field SFFloat      minSteeringAngle         -0.5
  field SFFloat      maxSteeringAngle          0.5
  field SFBool       interior                 TRUE
  field SFBool       dynamicSpeedDisplay      TRUE
  field SFBool       indicatorLevers          TRUE
  field SFNode       steeringWheel            CarSteeringWheel {}
  field SFBool       completeInterior         TRUE
  field SFBool       shifter                  TRUE
  field SFFloat      outerWindowTransparency  0.4
  field SFFloat      innerWindowTransparency  0.7
  field SFBool       innerWindowDust          FALSE
]
{
  %{
    local frontSpotLights = fields.frontSpotLights.value
    local interior = fields.interior.value
    local rearMirror = fields.rearMirror.value
    local outerWindowTransparency = fields.outerWindowTransparency.value
    local innerWindowTransparency = fields.innerWindowTransparency.value
    local dynamicSpeedDisplay = fields.dynamicSpeedDisplay.value
    local completeInterior = fields.completeInterior.value
    local innerWindowDust = fields.innerWindowDust.value
    if interior == false and rearMirror then
      io.stderr:write("The rear mirror can only enabled if 'interior' is set to TRUE.\n")
    end
    if interior == false and ( outerWindowTransparency ~= fields.outerWindowTransparency.defaultValue or innerWindowTransparency ~= fields.innerWindowTransparency.defaultValue ) then
      outerWindowTransparency = fields.outerWindowTransparency.defaultValue
      innerWindowTransparency = fields.innerWindowTransparency.defaultValue
      io.stderr:write("Window transparencies were reset to default values.\n")
    end
    if interior == false and ( dynamicSpeedDisplay or completeInterior or innerWindowDust ) then
      io.stderr:write("In order to see the effect of the last 6 fields, the 'interior' has to be enabled.\n")
    end
  }%
  Car {
    translation IS translation
    rotation IS rotation
    engineSound IS engineSound
    trackFront 1.628
    trackRear 1.628
    wheelbase 2.995
    time0To100 7
    engineMinRPM 1000
    engineMaxRPM 6500
    brakeCoefficient 1800  # calibrated for braking from 100 to 0km/h in 36.5m
#    brakeCoefficient 2200  # calibrated for braking from 100 to 0km/h in 36.5m
    engineFunctionCoefficients 34.11 0.136 -0.00001461
    wheelsDampingConstant 2
    gearRatio   [-12.5 9 8 5.35 4.3 4]
#    gearRatio   [-12.5 7 6 5.35 4.3 4]
    wheelFrontLeft BmwX5Wheel {
      name "front left wheel"
      physics DEF WHEEL_PHYSICS Physics {
        density -1
        mass 30
      }
    }
    wheelFrontRight BmwX5Wheel {
      name "front right wheel"
      physics USE WHEEL_PHYSICS
    }
    wheelRearRight BmwX5Wheel {
      name "rear right wheel"
      physics USE WHEEL_PHYSICS
    }
    wheelRearLeft BmwX5Wheel {
      name "rear left wheel"
      physics USE WHEEL_PHYSICS
    }
    extensionSlot [
      # Sensors slots
      Transform {
        translation 0 0.3 -1
        children IS sensorsSlotRear
      }
      Transform {
        translation 0 0.45 3.85
        rotation 0 1 0 3.14159
        children IS sensorsSlotFront
      }
      Transform {
        translation 0 1.45 1
        rotation 0 1 0 3.14159
        children IS sensorsSlotTop
      }
      Transform {
        translation 0 0 0
        rotation 0 1 0 3.14159
        children IS sensorsSlotCenter
      }
      # lights
      VehicleLights {
        front [
          Group {
            children [
              %{ if frontSpotLights then }%
                SpotLight {
                  attenuation 0 0 1
                  intensity 20
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction -0.2 -1 1
                  location 0.65 0.45 3.95
                  radius 20
                  castShadows TRUE
                }
                SpotLight {
                  attenuation 0 0 1
                  intensity 20
                  beamWidth 0.7
                  cutOffAngle 0.8
                  direction 0.2 -1 1
                  location -0.65 0.45 3.95
                  radius 20
                  castShadows TRUE
                }
              %{ end }%
              BmwX5FrontLight {
              }
            ]
          }
        ]
        rightIndicator [
          BmwX5RightIndicator {
          }
        ]
        leftIndicator [
          BmwX5LeftIndicator {
          }
        ]
        antifog [
          BmwX5AntiFogLight {
          }
        ]
        rear [
          BmwX5RearLight {
          }
        ]
        braking [
          BmwX5BrakingLight {
          }
        ]
        backwards [
          BmwX5BackwardsLight {
          }
        ]
      }
      %{ if interior then }%
          DEF INTERIOR_RIGHT_INDICATOR LED {
            children [
              Shape {
                appearance DEF INDICATOR_APPEARANCE PBRAppearance {
                  metalness 0
                  roughness 0.3
                  baseColor 0.255686 0.530196 0.353725
                }
                geometry IndexedFaceSet {
                  coord Coordinate {
                    point [
            -0.445511 0.730049 2.17647, -0.449058 0.730049 2.17647, -0.445511 0.727043 2.17378, -0.449058 0.727043 2.17378, 
            -0.449058 0.724502 2.1714, -0.449058 0.732554 2.17883, -0.453787 0.728528 2.17512
                    ]
                  }
                  coordIndex [
          1,3,6,-1, 5,1,6,-1, 1,2,3,-1, 3,4,6,-1, 1,0,2,-1
                  ]
                }
              }
            ]
            name "interior_right_indicators"
            color 0 0.596078 0
          }
          DEF INTERIOR_LEFT_INDICATOR LED {
            children [
              Shape {
                appearance USE INDICATOR_APPEARANCE
                geometry IndexedFaceSet {
                  coord Coordinate {
                    point [
            -0.444343 0.727043 2.17378, -0.440796 0.727043 2.17378, -0.444343 0.730048 2.17647, -0.440796 0.730048 2.17647, 
            -0.440796 0.732553 2.17883, -0.440796 0.724502 2.1714, -0.436066 0.728528 2.17512
                    ]
                  }
                  coordIndex [
         1,2,3,-1, 1,3,6,-1, 5,1,6,-1, 3,4,6,-1, 1,0,2,-1
                   ]
                }
              }
            ]
            name "interior_left_indicators"
            color 0 0.596078 0
          }
      %{ end }%
      # windshield wipers
      %{ if fields.windshieldWipers.value then }%
      DEF RIGHT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis 0.04 -2.19 -1.7
          anchor 0.05 0.79 2.55
        }
        device [
          DEF RIGHT_WIPER_MOTOR RotationalMotor {
            name "right_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
          DEF WIPER_SENSOR PositionSensor {
            name "wiper_sensor"
          }
        ]
        endPoint Solid {
          children [
            BmwX5RightWiper{
              %{ if outerWindowTransparency ~= 0 then }%
                castShadows TRUE
              %{ end }%
            }
          ]
          name "right wiper"
        }
      }
      DEF LEFT_WIPER HingeJoint {
        jointParameters HingeJointParameters {
          axis -0.08 -1.85 -1.25
          anchor 0.63 0.84 2.46
        }
        device [
          DEF LEFT_WIPER_MOTOR RotationalMotor {
            name "left_wiper_motor"
            maxPosition 1.6
            minPosition 0
            sound ""
          }
        ]
        endPoint Solid {
          children [
            BmwX5LeftWiper {
              %{ if outerWindowTransparency ~= 0 then }%
                castShadows TRUE
              %{ end }%
            }
          ]
          name "left wiper"
        }
      }
      %{ end }%
      BmwX5Mesh {
        color IS color
        outerWindowTransparency %{= outerWindowTransparency }%
      }
      %{ if innerWindowTransparency ~= 1 then }%
          BmwX5InnerWindow {
            innerWindowTransparency %{= innerWindowTransparency }%
            innerWindowDust IS innerWindowDust
          }
      %{ end }%
      %{ if fields.rightWingMirror.value then }%
          DEF RIGHT_WING_DISPLAY Display {
            children [
      %{ end }%
      BmwX5RightWingMirror {
      }
      %{ if fields.rightWingMirror.value then }%
            ]
            name "right_wing_display"
            width 768 #512
            height 384 #256
          }
      %{ end }%
      %{ if fields.leftWingMirror.value then }%
          DEF LEFT_WING_DISPLAY Display {
            children [
      %{ end }%
      BmwX5LeftWingMirror {
      }
      %{ if fields.leftWingMirror.value then }%
            ]
            name "left_wing_display"
            width 768 #512
            height 384 #256
          }
      %{ end }%
      # vehicle interior
      %{ if interior then }%
              BmwX5InteriorAu {
                %{ if dynamicSpeedDisplay then }%
                    baseColorMap "textures/bmw_interior_speedometer_without_needles.jpg"
                %{ else }%
                    baseColorMap "textures/bmw_interior_speedometer.jpg"
                %{ end }%
                indicatorLevers IS indicatorLevers
              }
              DEF REAR_MIRROR Hinge2Joint {
                jointParameters HingeJointParameters {
                  axis 0 1 0
                  anchor 0.03 1.195 1.757
                }
                jointParameters2 JointParameters {
                  axis 1 0 0
                }
                device [
                  DEF REAR_YAW_MOTOR RotationalMotor {
                    name "rear_yaw_mirror_frame_motor"
                    maxPosition 0.2
                    minPosition -0.2
                    sound ""
                  }
                ]
                device2 [
                  DEF REAR_PITCH_MOTOR RotationalMotor {
                    name "rear_pitch_mirror_frame_motor"
                    maxPosition 0.2
                    minPosition -0.2
                    sound ""
                  }
                ]
                endPoint Solid {
                  children [
                    BmwX5CentralMirrorFrameAu {
                    }
                    # When active, the parameter changes REAR_DISPLAY Shape to a display
                    %{ if rearMirror then }%
                      DEF REAR_DISPLAY Display {
                        children [
                    %{ end }%
                    BmwX5CentralMirrorAu {
                    }
                    %{ if rearMirror then }%
                        ]
                        name "rear_display"
                        width 256
                        height 80
                      }
                    %{ end }%
                  ]
                  name "central mirror"
                }
              }
              %{ if completeInterior then }%
                  BmwX5RearInteriorAu {
                    shifter IS shifter
                  }
              %{ end }%
              Transform {
                translation -0.43 0.61 2.03
                children [
                  Slot {
                    type "vehicle steering wheel"
                    endPoint IS steeringWheel
                  }
                ]
              }
              %{ if dynamicSpeedDisplay then }%
                  DEF SPEED_NEEDLE HingeJoint {
                    jointParameters HingeJointParameters {
                      axis 0 -0.035 0.055
                      anchor -0.3465 0.7308 2.16
                    }
                    device [
                      RotationalMotor {
                        name "speed_needle_motor"
                        maxPosition 4.42
                        minPosition 0
                        sound ""
                      }
                    ]
                    endPoint Solid {
                      children [
                        DEF LEFT_NEEDLE Shape {
                          appearance DEF NEEDLE_APPEARANCE PBRAppearance {
                              metalness 0
                              roughness 1
                              baseColor 1 0.564706 0.0313725
                              emissiveColor 0.337255 0.180392 0.00784314
                          }
                          geometry IndexedFaceSet {
                            coord Coordinate {
                              point [
								-0.343325 0.719537 2.16699, 
								-0.341901 0.721015 2.16824, 
								-0.308673 0.70148 2.15018, 
								-0.307648 0.701407 2.15008, 
								-0.308064 0.702112 2.15071, 
								-0.307828 0.701888 2.15051, 
								-0.307603 0.701561 2.15021, 
								-0.307829 0.701327 2.15002, 
								-0.308314 0.701383 2.15008
                              ]
                            }
                            coordIndex [
                              5, 2, 4, -1, 1, 4, 0, -1, 5, 6
                              8, -1, 3, 7, 6, -1, 8, 2, 5, -1
                              0, 4, 2, -1, 6, 7, 8, -1
                            ]
                          }
                        }
                      ]
                      name "speed needle"
                    }
                  }
                  DEF RPM_NEEDLE HingeJoint {
                    jointParameters HingeJointParameters {
                      axis 0 -0.049 0.055
                      anchor -0.5211 0.7319 2.16
                    }
                    device [
                      RotationalMotor {
                        name "rpm_needle_motor"
                        maxPosition 4.42
                        minPosition 0
                        sound ""
                      }
                    ]
                    endPoint Solid {
                      children [
                        DEF RIGHT_NEEDLE Shape {
                          appearance USE NEEDLE_APPEARANCE
                          geometry IndexedFaceSet {
                            coord Coordinate {
                              point [
								-0.518659 0.720529 2.16779, 
								-0.517224 0.722008 2.16903, 
								-0.484154 0.702505 2.15064, 
								-0.483129 0.702432 2.15054, 
								-0.48354 0.703137 2.15117, 
								-0.483306 0.702913 2.15097, 
								-0.483084 0.702587 2.15067, 
								-0.483311 0.702352 2.15048, 
								-0.483796 0.702408 2.15054
                              ]
                            }
                            coordIndex [
                              5, 2, 4, -1, 1, 4, 0, -1, 5, 6
                              7, -1, 3, 7, 6, -1, 8, 2, 5, -1
                              0, 4, 2, -1, 5, 7, 8, -1
                            ]
                          }
                        }
                      ]
                      name "rpm needle"
                    }
                  }
              %{ end }%
      %{ end }%
      # mirror cameras
      %{ if fields.leftWingMirror.value then }%
          DEF LEFT_WING_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0.3 0
              anchor 1 0.9 2.08
            }
            jointParameters2 JointParameters {
              axis 0.3 0 0.061
            }
            device [
              DEF LEFT_YAW_MOTOR RotationalMotor {
                name "left_wing_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF LEFT_PITCH_MOTOR RotationalMotor {
                name "left_wing_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF LEFT_WING_CAMERA Camera {
              translation 1 0.9 2.08
              rotation 0 1 0 6.14
              fieldOfView 0.785
              name "left_wing_camera"
              width 768 # 512
              height 384 # 256
              far %{= fields.mirrorFar.value }%
            }
          }
      %{ end }%
      %{ if fields.rightWingMirror.value then }%
          DEF RIGHT_WING_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0.3 0
              anchor -1 0.9 2.08
            }
            jointParameters2 JointParameters {
              axis 0.3 0 -0.061
            }
            device [
              DEF RIGHT_YAW_MOTOR RotationalMotor {
                name "right_wing_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF RIGHT_PITCH_MOTOR RotationalMotor {
                name "right_wing_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF RIGHT_WING_CAMERA Camera {
              translation -1 0.9 2.08
              rotation 0 1 0 0.14
              fieldOfView 0.785
              name "right_wing_camera"
              width 768 # 512
              height 384 # 256
               far %{= fields.mirrorFar.value }%
            }
          }
      %{ end }%
      %{ if rearMirror then }%
          DEF REAR_MIRROR Hinge2Joint {
            jointParameters HingeJointParameters {
              axis 0 0.3 0
              anchor 0 1.3 -0.7
            }
            jointParameters2 JointParameters {
              axis -0.3 0 0
            }
            device [
              DEF REAR_YAW_MOTOR RotationalMotor {
                name "rear_yaw_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            device2 [
              DEF REAR_PITCH_MOTOR RotationalMotor {
                name "rear_pitch_mirror_motor"
                maxPosition 0.2
                minPosition -0.2
                sound ""
              }
            ]
            endPoint DEF REAR_CAMERA Camera {
              translation -0.8 1.3 -0.7
              name "rear_camera"
              width 256
              height 80
              far %{= fields.mirrorFar.value }%
            }
          }
      %{ end }%
    ]
    name IS name
    model "BMW X5"
    controller IS controller
    controllerArgs IS controllerArgs
    supervisor IS supervisor
    synchronization IS synchronization
    suspensionFrontSpringConstant  IS suspensionFrontSpringConstant
    suspensionFrontDampingConstant IS suspensionFrontDampingConstant
    suspensionRearSpringConstant IS suspensionRearSpringConstant
    suspensionRearDampingConstant IS suspensionRearDampingConstant
    minSteeringAngle IS minSteeringAngle
    maxSteeringAngle IS maxSteeringAngle
    boundingObject Group {
      children [
        Transform {
          translation 0 0.29 2.6775
          children [
            Box {
              size 1.73 0.76 2
            }
          ]
        }
        Transform {
          translation 0 0.63 0.5875
          children [
            Box {
              size 1.73 1.44 2.14
            }
          ]
        }
        Transform {
          translation 0 0.53 -0.1725
          children [
            Box {
              size 1.73 0.78 1.41
            }
          ]
        }
      ]
    }
    radarCrossSection 100
    recognitionColors [
      %{= fields.color.value.r }% %{= fields.color.value.g }% %{= fields.color.value.b }%
    ]
    physics Physics {
      density -1
      mass 2000
      centerOfMass [
        0 0 1.25
      ]
      inertiaMatrix [
      ]
    }
  }
}
